---
import { getCollection, render } from 'astro:content';
import ChapterLayout from '../../layouts/ChapterLayout.astro';

export async function getStaticPaths() {
	const chapters = await getCollection('chapters');
	chapters.sort((a, b) => a.data.number - b.data.number);

	return chapters.map((chapter, index) => ({
		params: { slug: chapter.data.slug },
		props: { chapter, index, chapters },
	}));
}

const { chapter, index, chapters } = Astro.props;
const { Content } = await render(chapter);

const previousChapter = index > 0 ? chapters[index - 1] : null;
const nextChapter = index < chapters.length - 1 ? chapters[index + 1] : null;
---

<ChapterLayout number={chapter.data.number} title={chapter.data.title}>
	<section>
		<div class="container">
			<h2><span>{chapter.data.number}.</span> {chapter.data.title}</h2>
			<p>{chapter.data.intro}</p>
			<Content />
		</div>
	</section>

	<div class="section">
		<nav class="container chapter-navigation">
			{previousChapter && (
				<a class="prev" href={`/chapters/${previousChapter.data.slug}`}>← {previousChapter.data.title}</a>
			)}
			{nextChapter && (
				<a class="next" href={`/chapters/${nextChapter.data.slug}`}>{nextChapter.data.title} →</a>
			)}
		</nav>
	</div>
	
</ChapterLayout>

<style>
	.chapter-navigation {
		display: flex;
		justify-content: space-between;
		padding-block: 2rem;

		& .prev {
			margin-right: auto;
		}

		& .next {
			margin-left: auto;
		}
	}
</style>